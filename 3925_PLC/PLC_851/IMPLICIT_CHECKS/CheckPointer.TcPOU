<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="CheckPointer" Id="{3367b649-311d-4504-9ac9-8303296e807d}" SpecialFunc="CheckPointer">
    <Declaration><![CDATA[// Automatisch erzeugter Code: NICHT EDITIEREN
FUNCTION CheckPointer : POINTER TO BYTE
VAR_INPUT 
	ptToTest : POINTER TO BYTE; // Zieladresse des Pointers
	iSize : DINT;		        // Grösse des Typs auf den der Pointer zeigt. (z.B.: 20 für POINTER TO ARRAY [0..9] OF INT) 
	iGran : DINT;		        // Granularität des Pointer-Zugriffs. Dies ist die Größe des größten nichtstrukturierten Datentyps in dem Typ auf den der Pointer zeigt. (z.B.: 2 für POINTER TO ARRAY [0..9] OF INT)
	bWrite: BOOL;		        // Zeigt Lese- oder Schreibzugriff an. TRUE = Schreibzugriff.
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Automatisch erzeugter Code: Es handelt sich hierbei um einen Implementierungsvorschlag.
{noflow}
IF ptToTest=0 THEN
    ADSLOGSTR(ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_STRING,'CheckPointer failed due to invalid address.','');
ELSIF iSize<=0 THEN
    ADSLOGSTR(ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_STRING,'CheckPointer failed due to invalid size.','');
ELSIF iGran<=0 THEN
    ADSLOGSTR(ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_STRING,'CheckPointer failed due to invalid granularity.','');
// -> Please note that the following memory area check is time consuming:
//ELSIF F_CheckMemoryArea(pData:=ptToTest,nSize:=DINT_TO_UDINT(iSize)) = E_TcMemoryArea.Unknown THEN
//    ADSLOGSTR(ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_STRING,'CheckPointer failed due to unknown memory area.','');
END_IF
CheckPointer := ptToTest;
{flow}]]></ST>
    </Implementation>
    <LineIds Name="CheckPointer">
      <LineId Id="11" Count="12" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>