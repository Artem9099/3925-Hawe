<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="PrgMeasure" Id="{863d4cd8-1269-4ff0-9112-1a4520e9c307}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PrgMeasure
VAR
  uiSeq:                                                      UINT := 0;
END_VAR
VAR
  fbLocalSystemTime:                                          FB_LocalSystemTime := ( bEnable := TRUE, dwCycle := 1 );
  systemTime:                                                 TIMESTRUCT;
  sCurrentDateTime:                                           STRING;
  stNest1Record:                                              ST_DATABASE_RECORD;
  stNest2Record:                                              ST_DATABASE_RECORD;
  stNest3Record:                                              ST_DATABASE_RECORD;
  stNest4Record:                                              ST_DATABASE_RECORD;
  ColumnNames:                                                ARRAY [1..3] OF STRING(50);
  ColumnInfo:                                                 ARRAY [1..3] OF ST_ColumnInfo;
  sCmd:                                                       STRING(5000);
END_VAR
VAR // TwincatADSGateway parameter
  bDeleteMeasureFromDB:                                       BOOL;
  bDeleteFeedback:                                            BOOL;
END_VAR
VAR
  bLifeBit:                                                   BOOL;
  bAdsConnected:                                              BOOL;
  bReady:                                                     BOOL;
  bBusy:                                                      BOOL;
  bResult:                                                    BOOL;
  bOpenKeyboard:                                              BOOL;
  bCloseHMI:                                                  BOOL;
  bShutdownPc:                                                BOOL;
  bRestartPc:                                                 BOOL;
  sLog:                                                       T_MaxString;
  bGetDBExist:                                                BOOL;
  sDBName:                                                    T_MaxString := 'test';
  bGetMeasurementExist:                                       BOOL;
  sMeasurementName:                                           T_MaxString := 'Art123';
  bDeleteMeasurement:                                         BOOL;
  bDeleteAllMeasurements:                                     BOOL;
  bWriteStructData:                                           BOOL;
  sKeyName:                                                   T_MaxString := 'Dauerlauf';
  arrFieldNames:                                              ARRAY [0..99] OF T_MaxString;
  arrFieldValues:                                             ARRAY [0..99] OF LREAL;
  dtStartTime:                                                DT;
  dtEndTime:                                                  DT;
  
  fbInfluxDB:                                                 FB_INFLUX_DB_ADS(itfLogEvents:= PrgStation.fbLogEvents, itfOpMode:= PrgOrg.fbOpMode);
  bTest:                                                      BOOL;
  uiDBSeq:                                                    UINT := 0;
  bRes:                                                       BOOL;
  liTest:                                                     ULINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// FBs
fbInfluxDB(bResult:= bResult,
           bLifeBit:= bLifeBit,
           bAdsConnected:= bAdsConnected,
           bReady:= bReady,
           bBusy:= bBusy);

// Init
arrFieldNames[0] := 'Pressure';
arrFieldNames[1] := 'Force';
arrFieldNames[2] := 'Temperature';
arrFieldValues[0] := 100;
arrFieldValues[1] := 10;
arrFieldValues[2] := 33;

IF bTest THEN
  CASE uiDBSeq OF
    0:
      IF fbInfluxDB.M_SetReady() THEN
        uiDBSeq := 1;
      END_IF
      
    1:
      IF fbInfluxDB.M_FieldExistCheck(sBucketName:= 'test', 
                                  sMeasurementName:= 'Art123', 
                                  sTagName:= 'Dauerlauf',
                                  sFieldName:= 'Force',
                                  bResult=> bRes) 
      THEN
        bTest := FALSE;
        uiDBSeq := 0;
  		END_IF
  END_CASE
END_IF

// FBs call
fbLocalSystemTime(systemTime=> systemTime);
//fbNest1_db();
//fbNest2_db();
//fbNest3_db();
//fbNest4_db();

// Save data to MySQL Server
//A_010_DBInit();
//A_020_DBNest1();
]]></ST>
    </Implementation>
    <Action Name="A_010_DBInit" Id="{6bf0f23b-ec9b-4edc-a183-4c73385e1f55}">
      <Implementation>
        <ST><![CDATA[(*
// Config
ColumnInfo[0].sName := 'colBigInt';     ColumnInfo[0].eType := E_ColumnType.BigInt;     ColumnInfo[0].nLength := 8;     ColumnInfo[0].sProperty := 'IDENTITY(1,1)';
ColumnInfo[1].sName := 'colInteger';    ColumnInfo[1].eType := E_ColumnType.Integer;    ColumnInfo[1].nLength := 4;
ColumnInfo[2].sName := 'colSmallInt';   ColumnInfo[2].eType := E_ColumnType.SmallInt;   ColumnInfo[2].nLength := 2;
ColumnInfo[3].sName := 'colTinyInt';    ColumnInfo[3].eType := E_ColumnType.TinyInt;    ColumnInfo[3].nLength := 1;
ColumnInfo[4].sName := 'colBit';        ColumnInfo[4].eType := E_ColumnType.BIT_;       ColumnInfo[4].nLength := 1;
ColumnInfo[5].sName := 'colMoney';      ColumnInfo[5].eType := E_ColumnType.Money;      ColumnInfo[5].nLength := 8;
ColumnInfo[6].sName := 'colFloat';      ColumnInfo[6].eType := E_ColumnType.Float;      ColumnInfo[6].nLength := 8;
ColumnInfo[7].sName := 'colReal';       ColumnInfo[7].eType := E_ColumnType.REAL_;      ColumnInfo[7].nLength := 4;
ColumnInfo[8].sName := 'colDateTime';   ColumnInfo[8].eType := E_ColumnType.DateTime;   ColumnInfo[8].nLength := 4;
ColumnInfo[9].sName := 'colNText';      ColumnInfo[9].eType := E_ColumnType.NText;      ColumnInfo[9].nLength := 256;
ColumnInfo[10].sName := 'colNChar';     ColumnInfo[10].eType := E_ColumnType.NChar;     ColumnInfo[10].nLength := 10;
ColumnInfo[11].sName := 'colImage';     ColumnInfo[11].eType := E_ColumnType.Image;     ColumnInfo[11].nLength := 256;
ColumnInfo[12].sName := 'colNVarChar';  ColumnInfo[12].eType := E_ColumnType.NVarChar;  ColumnInfo[12].nLength := 50;
ColumnInfo[13].sName := 'colBinary';    ColumnInfo[13].eType := E_ColumnType.Binary;    ColumnInfo[13].nLength := 30;
ColumnInfo[14].sName := 'colVarBinary'; ColumnInfo[14].eType := E_ColumnType.VarBinary; ColumnInfo[14].nLength := 20;
*)

// Define header
ColumnNames[1] :=  ColumnInfo[1].sName := 'sZeitstempel';                              ColumnInfo[1].eType := E_ColumnType.NText;     ColumnInfo[1].nLength := 256;
ColumnNames[2] :=  ColumnInfo[2].sName := 'sPruefart';                                 ColumnInfo[2].eType := E_ColumnType.NText;     ColumnInfo[2].nLength := 256;
ColumnNames[3] :=  ColumnInfo[3].sName := 'sTimer';                                    ColumnInfo[3].eType := E_ColumnType.NText;     ColumnInfo[3].nLength := 256;
//ColumnNames[4] :=  ColumnInfo[4].sName := 'liSollzyklen';                              ColumnInfo[4].eType := E_ColumnType.BigInt;    ColumnInfo[4].nLength := 8;
//ColumnNames[5] :=  ColumnInfo[5].sName := 'liAktiverZyklus';                           ColumnInfo[5].eType := E_ColumnType.BigInt;    ColumnInfo[5].nLength := 8;
//ColumnNames[6] :=  ColumnInfo[6].sName := 'sPrüfrichtung';                             ColumnInfo[6].eType := E_ColumnType.NText;     ColumnInfo[6].nLength := 256;
//ColumnNames[7] :=  ColumnInfo[7].sName := 'lrSollprüfdruck_bar_A';                     ColumnInfo[7].eType := E_ColumnType.REAL_;     ColumnInfo[7].nLength := 4;
//ColumnNames[8] :=  ColumnInfo[8].sName := 'lrSollprüfdruck_bar_B';                     ColumnInfo[8].eType := E_ColumnType.REAL_;     ColumnInfo[8].nLength := 4;
//ColumnNames[9] :=  ColumnInfo[9].sName := 'lrIstprüfdruck_bar';                        ColumnInfo[9].eType := E_ColumnType.REAL_;     ColumnInfo[9].nLength := 4;
//ColumnNames[10] := ColumnInfo[10].sName := 'lrSollprüfkraft_KN_A';                     ColumnInfo[10].eType := E_ColumnType.REAL_;    ColumnInfo[10].nLength := 4;
//ColumnNames[11] := ColumnInfo[11].sName := 'lrSollprüfkraft_KN_B';                     ColumnInfo[11].eType := E_ColumnType.REAL_;    ColumnInfo[11].nLength := 4;
//ColumnNames[12] := ColumnInfo[12].sName := 'lrIstprüfkraft_KN';                        ColumnInfo[12].eType := E_ColumnType.REAL_;    ColumnInfo[12].nLength := 4;
//ColumnNames[13] := ColumnInfo[13].sName := 'lrPrüfdruck_bar_A';                        ColumnInfo[13].eType := E_ColumnType.REAL_;    ColumnInfo[13].nLength := 4;
//ColumnNames[14] := ColumnInfo[14].sName := 'lrPrüfdruck_bar_B';                        ColumnInfo[14].eType := E_ColumnType.REAL_;    ColumnInfo[14].nLength := 4;
//ColumnNames[15] := ColumnInfo[15].sName := 'lrLosbrechdruck_bar';                      ColumnInfo[15].eType := E_ColumnType.REAL_;    ColumnInfo[15].nLength := 4;
//ColumnNames[16] := ColumnInfo[16].sName := 'lrLosbrechdruck_bar_A';                    ColumnInfo[16].eType := E_ColumnType.REAL_;    ColumnInfo[16].nLength := 4;
//ColumnNames[17] := ColumnInfo[17].sName := 'lrLosbrechdruck_bar_B';                    ColumnInfo[17].eType := E_ColumnType.REAL_;    ColumnInfo[17].nLength := 4;
//ColumnNames[18] := ColumnInfo[18].sName := 'lrSpeicherdruck_bar';                      ColumnInfo[18].eType := E_ColumnType.REAL_;    ColumnInfo[18].nLength := 4;
//ColumnNames[19] := ColumnInfo[19].sName := 'lrSollgegenhaltedruck_bar_A';              ColumnInfo[19].eType := E_ColumnType.REAL_;    ColumnInfo[19].nLength := 4;
//ColumnNames[20] := ColumnInfo[20].sName := 'lrSollgegenhaltedruck_bar_B';              ColumnInfo[20].eType := E_ColumnType.REAL_;    ColumnInfo[20].nLength := 4;
//ColumnNames[21] := ColumnInfo[21].sName := 'lrIstgegenhaltedruck_bar';                 ColumnInfo[21].eType := E_ColumnType.REAL_;    ColumnInfo[21].nLength := 4;
//ColumnNames[22] := ColumnInfo[22].sName := 'lrSollgegenhaltekraft_KN_A';               ColumnInfo[22].eType := E_ColumnType.REAL_;    ColumnInfo[22].nLength := 4;
//ColumnNames[23] := ColumnInfo[23].sName := 'lrSollgegenhaltekraft_KN_B';               ColumnInfo[23].eType := E_ColumnType.REAL_;    ColumnInfo[23].nLength := 4;
//ColumnNames[24] := ColumnInfo[24].sName := 'lrIstgegenhaltekraft_KN';                  ColumnInfo[24].eType := E_ColumnType.REAL_;    ColumnInfo[24].nLength := 4;
//ColumnNames[25] := ColumnInfo[25].sName := 'lrPosition';                               ColumnInfo[25].eType := E_ColumnType.REAL_;    ColumnInfo[25].nLength := 4;
//ColumnNames[26] := ColumnInfo[26].sName := 'lrPosition_Min';                           ColumnInfo[26].eType := E_ColumnType.REAL_;    ColumnInfo[26].nLength := 4;
//ColumnNames[27] := ColumnInfo[27].sName := 'lrPosition_Max';                           ColumnInfo[27].eType := E_ColumnType.REAL_;    ColumnInfo[27].nLength := 4;
//ColumnNames[28] := ColumnInfo[28].sName := 'lrKolbenlänge';                            ColumnInfo[28].eType := E_ColumnType.REAL_;    ColumnInfo[28].nLength := 4;
//ColumnNames[29] := ColumnInfo[29].sName := 'lrTemperatur';                             ColumnInfo[29].eType := E_ColumnType.REAL_;    ColumnInfo[29].nLength := 4;
//ColumnNames[30] := ColumnInfo[30].sName := 'lrKolbenfläche_A';                         ColumnInfo[30].eType := E_ColumnType.REAL_;    ColumnInfo[30].nLength := 4;
//ColumnNames[31] := ColumnInfo[31].sName := 'lrKolbenfläche_B';                         ColumnInfo[31].eType := E_ColumnType.REAL_;    ColumnInfo[31].nLength := 4;
//ColumnNames[32] := ColumnInfo[32].sName := 'lrNokUnterschied';                         ColumnInfo[32].eType := E_ColumnType.REAL_;    ColumnInfo[32].nLength := 4;
//ColumnNames[33] := ColumnInfo[33].sName := 'lrNokLimit_Prozent';                       ColumnInfo[33].eType := E_ColumnType.REAL_;    ColumnInfo[33].nLength := 4;
//ColumnNames[34] := ColumnInfo[34].sName := 'lrSollgeschwindigkeit_mmProS_A';           ColumnInfo[34].eType := E_ColumnType.REAL_;    ColumnInfo[34].nLength := 4;
//ColumnNames[35] := ColumnInfo[35].sName := 'lrSollgeschwindigkeit_mmProS_B';           ColumnInfo[35].eType := E_ColumnType.REAL_;    ColumnInfo[35].nLength := 4;
//ColumnNames[36] := ColumnInfo[36].sName := 'lrIstgeschwindigkeit_mmProS';              ColumnInfo[36].eType := E_ColumnType.REAL_;    ColumnInfo[36].nLength := 4;

// Current Timestamp
sCurrentDateTime := CONCAT(TO_STRING(systemTime.wYear), '_');
sCurrentDateTime := CONCAT(sCurrentDateTime, TO_STRING(systemTime.wMonth));
sCurrentDateTime := CONCAT(sCurrentDateTime, '_');
sCurrentDateTime := CONCAT(sCurrentDateTime, TO_STRING(systemTime.wDay));
sCurrentDateTime := CONCAT(sCurrentDateTime, '_');
sCurrentDateTime := CONCAT(sCurrentDateTime, TO_STRING(systemTime.wHour));
sCurrentDateTime := CONCAT(sCurrentDateTime, '_');
sCurrentDateTime := CONCAT(sCurrentDateTime, TO_STRING(systemTime.wMinute));
sCurrentDateTime := CONCAT(sCurrentDateTime, '_');
sCurrentDateTime := CONCAT(sCurrentDateTime, TO_STRING(systemTime.wSecond));

]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_020_DBNest1" Id="{aecf5f8e-87ac-46d9-ad92-8292f5baf49e}">
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="PrgMeasure">
      <LineId Id="1732" Count="0" />
      <LineId Id="1628" Count="0" />
      <LineId Id="1731" Count="0" />
      <LineId Id="1724" Count="2" />
      <LineId Id="1733" Count="0" />
      <LineId Id="1629" Count="0" />
      <LineId Id="1518" Count="0" />
      <LineId Id="1520" Count="4" />
      <LineId Id="1624" Count="0" />
      <LineId Id="1606" Count="1" />
      <LineId Id="1612" Count="0" />
      <LineId Id="1614" Count="0" />
      <LineId Id="1616" Count="0" />
      <LineId Id="1627" Count="0" />
      <LineId Id="1619" Count="0" />
      <LineId Id="1617" Count="0" />
      <LineId Id="1620" Count="0" />
      <LineId Id="1630" Count="1" />
      <LineId Id="1730" Count="0" />
      <LineId Id="1728" Count="0" />
      <LineId Id="1634" Count="0" />
      <LineId Id="1626" Count="0" />
      <LineId Id="1622" Count="1" />
      <LineId Id="1613" Count="0" />
      <LineId Id="1608" Count="0" />
      <LineId Id="1519" Count="0" />
      <LineId Id="1068" Count="0" />
      <LineId Id="1295" Count="0" />
      <LineId Id="1069" Count="2" />
      <LineId Id="1073" Count="0" />
      <LineId Id="1309" Count="0" />
      <LineId Id="1074" Count="0" />
      <LineId Id="1288" Count="0" />
      <LineId Id="1075" Count="0" />
      <LineId Id="1440" Count="0" />
    </LineIds>
    <LineIds Name="PrgMeasure.A_010_DBInit">
      <LineId Id="2" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="3" Count="14" />
      <LineId Id="65" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="33" Count="5" />
      <LineId Id="83" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="43" Count="1" />
      <LineId Id="46" Count="2" />
      <LineId Id="45" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="54" Count="1" />
      <LineId Id="62" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="67" Count="10" />
      <LineId Id="80" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="PrgMeasure.A_020_DBNest1">
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>