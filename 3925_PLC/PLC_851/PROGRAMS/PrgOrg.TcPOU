<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="PrgOrg" Id="{f0764cae-b40a-4923-892b-4dcdfee12590}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'global_init_slot' := '40010'}
//{warning 'Safety überarbeiten 170119'}
PROGRAM PrgOrg
VAR
	fbLocalSysTime: 				                    FB_LOC_SYS_TIME;
	fbEventHandler: 				                    FB_HANDLE_EVENTS_TXT(itfLocSysTime:=fbLocalSysTime, strPath:='C:\Event\Event.csv');
	
// Safety IO  
// Input Sensors
  // EL1918 - 8-chanel-digital-input (KF1.2.1)                 		
  fbEStopLeft_Ch1: 						                FB_BINARY_SWITCH(bInNC:=TRUE);
  fbEStopLeft_Ch2: 						                FB_BINARY_SWITCH(bInNC:=TRUE);
  fbEStopRight_Ch1: 						              FB_BINARY_SWITCH(bInNC:=TRUE);
  fbSafetyDoorLeft_Ch1: 						          FB_BINARY_SWITCH(bInNC:=TRUE);
  fbSafetyDoorLeft_Ch2: 						          FB_BINARY_SWITCH(bInNC:=TRUE);
  fbSafetyDoorRight_Ch1: 						          FB_BINARY_SWITCH(bInNC:=TRUE);
  fbSafetyDoorRight_Ch2: 						          FB_BINARY_SWITCH(bInNC:=TRUE);
  // EL1904 - 4-chanel-digital-input (KF1.2.2) 
  fbEStopJog_Ch1: 						                FB_BINARY_SWITCH(bInNC:=TRUE);
  fbEStopJog_Ch2: 						                FB_BINARY_SWITCH(bInNC:=TRUE);
  fbJog_AckBtn_Ch1: 						              FB_BINARY_SWITCH(bInNC:=TRUE);
  fbJog_AckBtb_Ch2: 						              FB_BINARY_SWITCH(bInNC:=TRUE);
  // EL1904 - 4-chanel-digital-input (KF1.2.3) 
  fbJog_KeySwitch: 						                FB_BINARY_SWITCH(bInNC:=TRUE);
  fbEStop_FeedbackCircuit: 						        FB_BINARY_SWITCH(bInNC:=TRUE);
  fbSafetyDoor_FeedbackCircuit: 						  FB_BINARY_SWITCH(bInNC:=TRUE);
  fbJog_FeedbackCircuit: 						          FB_BINARY_SWITCH(bInNC:=TRUE);
  // EL1904 - 4-chanel-digital-input (KF1.2.4) 
  fbServiceDoorLeft_TestClock_Ch1: 						FB_BINARY_SWITCH(bInNC:=TRUE);
  fbServiceDoorLeft_TestClock_Ch2: 						FB_BINARY_SWITCH(bInNC:=TRUE);
  fbServiceDoorRight_TestClock_Ch1: 					FB_BINARY_SWITCH(bInNC:=TRUE);
  fbServiceDoorRight_TestClock_Ch2: 					FB_BINARY_SWITCH(bInNC:=TRUE);
  // EL1904 - 4-chanel-digital-input (KF1.2.5) 
  fbCounterCyl1_JogValvePos: 						      FB_BINARY_SWITCH(bInNC:=TRUE);
  fbCounterCyl2_JogValvePos: 						      FB_BINARY_SWITCH(bInNC:=TRUE);
  fbCounterCyl3_JogValvePos: 						      FB_BINARY_SWITCH(bInNC:=TRUE);
  fbCounterCyl4_JogValvePos: 						      FB_BINARY_SWITCH(bInNC:=TRUE);
  
  /////////////////////////////////////////
  // EL1018 - 8-chanel-digital-input (KF1.5.0)
  fbPowerAdapter24V_Hydraulics_Ok:                FB_BINARY_SWITCH(bInNC:= FALSE);
  fbSelectivityModules_Ok:                        FB_BINARY_SWITCH(bInNC:= FALSE);
  fbCircuitBreaker_Ok:                            FB_BINARY_SWITCH(bInNC:= FALSE);
  fbCabinetTemperature_Ok:                        FB_BINARY_SWITCH(bInNC:= FALSE);
  // EL1018 - 8-chanel-digital-input (KF1.5.1)
  fbUnitConnector1_Contacted:                     FB_BINARY_SWITCH(bInNC:= FALSE);
  fbUnitConnector2_Contacted:                     FB_BINARY_SWITCH(bInNC:= FALSE);
  fbUnitConnector3_Contacted:                     FB_BINARY_SWITCH(bInNC:= FALSE);
  fbUnitConnector4_Contacted:                     FB_BINARY_SWITCH(bInNC:= FALSE);
  fbLiquiphant_TestBench_Triggered:               FB_BINARY_SWITCH(bInNC:= FALSE);
  fbLiquiphant_ValveBlocks_Triggered:             FB_BINARY_SWITCH(bInNC:= FALSE);
	
  // Other                   			
	fbOpMode:							                      FB_OP_MODE_PAUSE( itfHandleEvents:= fbEventHandler, 
	                                                              itfPowerAdapter24V_Hydraulics_Ok:= fbPowerAdapter24V_Hydraulics_Ok, 
	                                                              itfSelectivityModules_Ok:= fbSelectivityModules_Ok, 
	                                                              itfCircuitBreaker_Ok:= fbCircuitBreaker_Ok, 
	                                                              itfCabinetTemperature_Ok:= fbCabinetTemperature_Ok, 
	                                                              itfUnitConnector1_Contacted:= fbUnitConnector1_Contacted, 
	                                                              itfUnitConnector2_Contacted:= fbUnitConnector2_Contacted, 
	                                                              itfUnitConnector3_Contacted:= fbUnitConnector3_Contacted, 
	                                                              itfUnitConnector4_Contacted:= fbUnitConnector4_Contacted, 
	                                                              itfLiquiphant_TestBench_Triggered:= fbLiquiphant_TestBench_Triggered, 
	                                                              itfLiquiphant_ValveBlocks_Triggered:= fbLiquiphant_ValveBlocks_Triggered,
                                                                itfFromSafety_EStop_Ok:= fbFromSafety_EStop_Ok,
                                                                itfFromSafety_SafetyDoor_Ok:= fbFromSafety_SafetyDoor_Ok,
                                                                itfFromSafety_KeySwitch_JogPos:= fbFromSafety_KeySwitch_JogPos,
                                                                itfFromSafety_EStopLeft_Ok:= fbFromSafety_EStopLeft_Ok,
                                                                itfFromSafety_EStopRight_Ok:= fbFromSafety_EStopRight_Ok,
                                                                itfFromSafety_EStopJog_Ok:= fbFromSafety_EStopJog_Ok,
                                                                itfFromSafety_SafetyDoorLeft_Ok:= fbFromSafety_SafetyDoorLeft_Ok,
                                                                itfFromSafety_SafetyDoorRight_Ok:= fbFromSafety_SafetyDoorRight_Ok,
                                                                itfFromSafety_ServiceDoorLeft_Ok:= fbFromSafety_ServiceDoorLeft_Ok,
                                                                itfFromSafety_ServiceDoorRight_Ok:= fbFromSafety_ServiceDoorRight_Ok,
                                                                itfFromSafety_JogAckBtn_Pressed:= fbFromSafety_JogAckBtn_Pressed,
                                                                itfFromSafety_StateServiceValve1:= fbFromSafety_StateServiceValve1,
                                                                itfFromSafety_StateServiceValve2:= fbFromSafety_StateServiceValve2,
                                                                itfFromSafety_StateServiceValve3:= fbFromSafety_StateServiceValve3,
                                                                itfFromSafety_StateServiceValve4:= fbFromSafety_StateServiceValve4,
                                                                itfFromSafety_ServiceMode_Ok:= fbFromSafety_ServiceMode_Ok,
                                                                itfFromSafety_ServiceValves_Ok:= fbFromSafety_ServiceValves_Ok);
                            	
	fbUserMng: 							                    FB_USER_MANAGER_OLD;

	
  // From Safety
	bInit: 								                      BOOL:=TRUE;	
	iCaseOpMode: 						                    INT:=1;
	tonInitQuit:						                    TON;
	
	fbErrorACK: 						                    FB_BINARY_OUTPUT;
	fbSafetyRun: 						                    FB_BINARY_OUTPUT;
	fbSafetyRestart:										        FB_BINARY_OUTPUT;
	fbLockDoor:												          FB_BINARY_OUTPUT;
               					
	fbComErr:							                      FB_BINARY_SWITCH(bInNC:= FALSE);
	fbErr:								                      FB_BINARY_SWITCH(bInNC:= FALSE);
	fbIn:								                        FB_BINARY_SWITCH(bInNC:= FALSE);
	
	tpErrAck:							                      TP;           	
	tpQuit: 							                      TP;
	fTrigAck:							                      F_TRIG;
	tpTrigAck:							                    TP;
  tonAck:                                     TON;
  bAck:                                       BOOL;
  uiAckSeq:                                   UINT := 0;
  
  // From safety
  fbFromSafety_EStop_Ok:                      FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_SafetyDoor_Ok:                 FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_KeySwitch_JogPos:              FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_EStopLeft_Ok:                  FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_EStopRight_Ok:                 FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_EStopJog_Ok:                   FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_SafetyDoorLeft_Ok:             FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_SafetyDoorRight_Ok:            FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_ServiceDoorLeft_Ok:            FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_ServiceDoorRight_Ok:           FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_JogAckBtn_Pressed:             FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_StateServiceValve1:            FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_StateServiceValve2:            FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_StateServiceValve3:            FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_StateServiceValve4:            FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_ServiceMode_Ok:                FB_BINARY_SWITCH(bInNC:= FALSE);
  fbFromSafety_ServiceValves_Ok:              FB_BINARY_SWITCH(bInNC:= FALSE);
END_VAR
VAR
  bInitRestart:                               BOOL;
  uiOpStep:                                   UINT;
  bStop:                                      BOOL;
  bResetModeSelectionTrigger:                 BOOL;
  bInitOk:                                    BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbEventHandler();
fbOpMode();
fbUserMng();

// Actions
A_010_Ack();
A_040_BypassPumpAndOilCooler();
A_030_SetReady();
A_020_EStopAndErrorHandling();
A_050_InitAndAutomatic();
A_070_ResetModeSelection();
A_060_StopHandling();]]></ST>
    </Implementation>
    <Action Name="A_010_Ack" Id="{f0436991-81ef-4c69-a70c-5e070e2af3d5}">
      <Implementation>
        <ST><![CDATA[IF bAck THEN
  CASE uiAckSeq OF
    0:
      fbErrorACK.M_Set();
      uiAckSeq := 1;
    1:
      tonAck(IN:= NOT tonAck.Q, PT:= T#100MS);
      IF tonAck.Q THEN
        fbErrorACK.M_Reset();
        uiAckSeq := 2;
	    END_IF
    2:
      fbSafetyRestart.M_Set();
      uiAckSeq := 3;
    3:
      tonAck(IN:= NOT tonAck.Q, PT:= T#1S);
      IF tonAck.Q THEN
        fbSafetyRestart.M_Reset();
        uiAckSeq := 0;
        bAck := FALSE;
	    END_IF
	END_CASE
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_020_EStopAndErrorHandling" Id="{ba4794b9-c929-400d-8163-d23b4b97b537}">
      <Implementation>
        <ST><![CDATA[IF NOT fbSafetyRun.P_State THEN
  fbSafetyRun.M_Set();
END_IF

IF fbOpMode.P_EMERGANCY_STOP OR fbOpMode.P_OP_MODE_STATE = OP_MODE.MACHINE_ERROR THEN
  bInitOk := FALSE;
  fbLockDoor.M_Reset();
END_IF

// Safety
IF TRUE
AND (fbOpMode.P_EMERGANCY_STOP 
OR fbOpMode.P_OP_MODE_STATE = OP_MODE.MACHINE_ERROR) 
THEN
  CASE uiOpStep OF
    0:;
      IF PrgStation.fbMainProcess.M_SetReady() THEN
        bInitOk := FALSE;
        uiOpStep := 1;
			END_IF
    1:;
      IF PrgStation.fbMainProcess.M_EStop() THEN
        bResetModeSelectionTrigger := TRUE;
        bStop := FALSE;
        uiOpStep := 0;
	    END_IF
	END_CASE
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_030_SetReady" Id="{3604e0fa-4680-40b0-8f2f-ab5cc5fafc2a}">
      <Implementation>
        <ST><![CDATA[IF TRUE
AND (fbOpMode.P_OP_MODE_STATE = OP_MODE.CONTROL_ON OR fbOpMode.P_OP_MODE_STATE = OP_MODE.INIT_OK)
AND NOT PrgStation.fbMainProcess.P_ReadyState
AND NOT bStop
THEN
  PrgStation.fbMainProcess.M_SetReady();
  uiOpStep := 0;
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_040_BypassPumpAndOilCooler" Id="{9c41afdc-4e65-41b2-861b-9faa1a5360a0}">
      <Implementation>
        <ST><![CDATA[// Bypass and oil cooler control
IF TRUE
AND NOT PrgStation.fbOilCooler.P_State 
THEN
  PrgStation.fbOilCooler.M_On();
END_IF
IF TRUE
AND NOT PrgStation.fbBypassPump.P_State
THEN
  PrgStation.fbBypassPump.M_On();
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_050_InitAndAutomatic" Id="{46255bae-9a31-4529-83fc-3249f3d41398}">
      <Implementation>
        <ST><![CDATA[IF TRUE
AND bInitRestart
THEN
  bInitRestart := FALSE;
  bInitOk := FALSE;
  fbOpMode.P_INIT_OK := FALSE;
END_IF

IF TRUE
AND fbOpMode.P_OP_MODE_STATE = OP_MODE.INIT
AND NOT (fbOpMode.P_OP_MODE_STATE = OP_MODE.INIT_OK)
AND NOT bStop
THEN
  IF PrgStation.fbMainProcess.M_Reset() THEN
    bResetModeSelectionTrigger := TRUE;
    bInitOk := TRUE;
	END_IF
ELSIF TRUE
AND fbOpMode.P_OP_MODE_STATE = OP_MODE.AUTO
AND NOT bStop
THEN
  IF PrgVisu.fbVisuOPMode.P_EnduranceRunSelected THEN
    IF PrgStation.fbMainProcess.M_EnduranceRun(stEnduranceRunParams:= PrgStation.stRecipeParams.stRecipeEnduranceRun) THEN
      bResetModeSelectionTrigger := TRUE;
		END_IF
  ELSIF PrgVisu.fbVisuOPMode.P_BreakPressureDetSelected THEN
    IF PrgStation.fbMainProcess.M_BreakPressureDet(stBreakPressureParams:= PrgStation.stRecipeParams.stRecipeBreakPressure) THEN
      bResetModeSelectionTrigger := TRUE;
		END_IF
  ELSIF PrgVisu.fbVisuOPMode.P_LeakTest1Selected THEN
    IF PrgStation.fbMainProcess.M_LeakTest1(stLeakTest1Params:= PrgStation.stRecipeParams.stRecipeLeakTest1) THEN
      bResetModeSelectionTrigger := TRUE;
		END_IF
  ELSIF PrgVisu.fbVisuOPMode.P_LeakTest2Selected THEN
    IF PrgStation.fbMainProcess.M_LeakTest2(stLeakTest2Params:= PrgStation.stRecipeParams.stRecipeLeakTest2) THEN
      bResetModeSelectionTrigger := TRUE;
		END_IF
	END_IF
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_060_StopHandling" Id="{bc9f315e-7fb3-49b2-abe0-c3dc2d962ebb}">
      <Implementation>
        <ST><![CDATA[IF TRUE
AND bStop
THEN
  CASE uiOpStep OF
    0:;
      IF PrgStation.fbMainProcess.M_SetReady() THEN
        uiOpStep := 1;
			END_IF
    1:;
      IF PrgStation.fbMainProcess.M_Stop() THEN
        bStop := FALSE;
        bInitOk := FALSE;
        bResetModeSelectionTrigger := TRUE;
        uiOpStep := 0;
	    END_IF
	END_CASE
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_070_ResetModeSelection" Id="{1a929c2c-679c-443a-85c1-d016ae96ca89}">
      <Implementation>
        <ST><![CDATA[IF bResetModeSelectionTrigger THEN
  fbOpMode.M_OP_MODE_OFF();
  IF PrgVisu.fbVisuOPMode.M_ResetModeSelection() THEN
    bResetModeSelectionTrigger := FALSE;
    IF bInitOk THEN
      fbOpMode.P_INIT_OK := TRUE;
    ELSE
      fbOpMode.P_INIT_OK := FALSE;
		END_IF
  END_IF
END_IF]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="PrgOrg">
      <LineId Id="5736" Count="10" />
      <LineId Id="5653" Count="0" />
    </LineIds>
    <LineIds Name="PrgOrg.A_010_Ack">
      <LineId Id="2" Count="21" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="PrgOrg.A_020_EStopAndErrorHandling">
      <LineId Id="2" Count="6" />
      <LineId Id="1" Count="0" />
      <LineId Id="10" Count="18" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="PrgOrg.A_030_SetReady">
      <LineId Id="2" Count="6" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="PrgOrg.A_040_BypassPumpAndOilCooler">
      <LineId Id="2" Count="9" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="PrgOrg.A_050_InitAndAutomatic">
      <LineId Id="2" Count="37" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="PrgOrg.A_060_StopHandling">
      <LineId Id="2" Count="15" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="PrgOrg.A_070_ResetModeSelection">
      <LineId Id="2" Count="9" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>